{"version":3,"sources":["webpack:///./src/app/departure.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/departures.service.ts","webpack:///./src/app/keys.pipe.ts","webpack:///./src/app/navbar.component.ts","webpack:///./src/app/small-departure.component.ts","webpack:///./src/app/tram.service.ts","webpack:///./src/app/partials/app_component.html","webpack:///./src/app/partials/navbar.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'departure',\n  template: `\n  <div class=\"upcoming-tram\">\n    <h1>{{ minsToNow(departure.estimated_departure_utc) }}</h1>\n  </div>\n\n  <div class=\"progress\">\n    <div aria-valuemax=\"60\" aria-valuemin=\"0\" aria-valuenow=\"40\" class=\"{{'progress-bar progress-bar-' + crowdDisruptions[departure.run_id]?.class.toLowerCase()}}\"\n        role=\"progressbar\" [ngStyle]=\"{width: calculateWidth(departure.run_id)}\">\n      {{crowdDisruptions[departure.run_id]?.class}}\n    </div>\n  </div>\n  `\n})\nexport class DepartureComponent {\n  @Input() departure: any;  // departure data: parsedEstDeptTime\n  @Input() routes: any; // list of routes, returned from PTV API\n  @Input() directions: any; // list of directions, returned from PTV API\n  @Input() crowdDisruptions: any;  // crowdsoured disruptions\n  @Input() crowdedness: any;  // crowdsourced crowding data\n\n  /* formats the time string to a time from now */\n  minsToNow(dateTimeString: string): string {\n    var date = new Date(dateTimeString);\n    var time = date.getTime() - new Date().getTime();\n    var mins = Math.round(time/1000/60);  // milliseconds -> seconds -> minutes\n\n    var ret = \"in \";\n    if (mins < 0) {\n      ret = \"Departed\"\n    }\n    else if (mins == 0) {\n      ret = \"Now\";\n    }\n    else if (mins == 1) {\n      ret += mins + \" min\";\n    }\n    else if (mins < 60) {\n      ret += mins + \" mins\";\n    }\n    else if (mins%60 == 1) {\n      if (Math.round(mins/60) == 1) {\n        ret += Math.round(mins/60) + \" hour \" + mins%60 + \" min\";\n      } else {\n        ret += Math.round(mins/60) + \" hours \" + mins%60 + \" min\";\n      }\n    }\n    else {\n      if (Math.round(mins/60) == 1) {\n        ret += Math.round(mins/60) + \" hour \" + mins%60 + \" mins\";\n      } else {\n        ret += Math.round(mins/60) + \" hours \" + mins%60 + \" mins\";\n      }\n    }\n\n    return ret;\n  }\n\n  calculateWidth(runId: any): string {\n    if (this.crowdDisruptions[runId]) {\n      return this.crowdDisruptions[runId].average/3*100 + '%';\n    } else {\n      return \"0%\";\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/departure.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 185;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 185\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\n// import { GongService } from './gong.service';\nimport { TramService } from './tram.service';\nimport { DeparturesService } from './departures.service'\nimport { DeparturesData, Stop } from './departures';\nimport { Http, Response } from \"@angular/http\";\n\nimport { IntervalObservable } from 'rxjs/observable/IntervalObservable';\n\n\nvar jumbotronImages = ['http://i.imgur.com/52bc7MI.jpg', 'http://i.imgur.com/sqOw10k.jpg', 'http://i.imgur.com/4KYxeCV.jpg', 'http://i.imgur.com/8zk1Odl.jpg', 'http://i.imgur.com/QUAlma0.jpg', 'http://i.imgur.com/Dflx2c0.jpg', 'http://i.imgur.com/oZxFHmC.jpg', 'http://i.imgur.com/I6yatSR.jpg', 'http://i.imgur.com/1n2udYH.jpg', 'http://i.imgur.com/SmZqStQ.jpg', 'http://i.imgur.com/qhUgfXJ.jpg', 'http://i.imgur.com/mIMKH0x.jpg', 'http://i.imgur.com/jDGsOEm.jpg', 'http://i.imgur.com/RVzgIkR.jpg', 'http://i.imgur.com/BILgjuf.jpg', 'http://i.imgur.com/0Rarcvi.jpg', 'http://i.imgur.com/7oCRYB3.jpg', 'http://i.imgur.com/vfUlNwL.jpg', 'http://i.imgur.com/K4czJdd.jpg', 'http://i.imgur.com/n9ormd8.jpg', 'http://i.imgur.com/R0OWtPD.jpg'];\n\nvar getRandomImageURL = function(): string {\n    var randomNo = Math.floor(Math.random()*jumbotronImages.length);\n    return jumbotronImages[randomNo];\n}\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './partials/app_component.html',\n  providers: [ DeparturesService, TramService ],\n  styles: ['.jumbotron { background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url(\"' + getRandomImageURL() + '\"); }']\n})\nexport class AppComponent implements OnInit {\n  departuresData: DeparturesData;\n  stopData: Stop;\n  stopName: string;\n  stopNo: string;\n  routes: any[];\n  directions: any[];\n  processedGroupedDepts: any;\n\n  // crowdsourced data\n  crowdedness: any;\n  crowdDisruptions: any;\n\n  // Data needed for POST methods\n  data: any = {}; // for crowding. Keys: stop_id, run_id, crowdedness\n  disruptionData: any = {}; // for disruption. Holds *all* entered text for now\n  lastSubmitted: any; // departure\n  lastSubmittedDisruption: any;\n\n  // Method used for crowdedness post\n  onInputData(departure: any, crowdedness: number) {\n    console.log(departure);\n    this.lastSubmitted = departure;\n    this.data.stop_id = departure.stop_id;\n    this.data.run_id = departure.run_id;\n    this.data.crowdedness = crowdedness;\n  }\n\n  onSubmitCrowdedness() {\n    this.tramService.storeTrams(this.data).\n          subscribe((response) => console.log(response),\n                    (error) => console.log(error));\n    this.getDeparturesData();\n  }\n\n  onSubmitDisruption(departure: any, disruption: any) {\n    console.log('onSubmitDisruption');\n    console.log(departure);\n    console.log(disruption);\n    let data = {};\n    data['runID'] = departure.run_id;\n    data['stopID'] = departure.stop_id;\n    data['disruption'] = disruption;\n    console.log(data);\n    this.tramService.storeDisruption(data)\n      .subscribe((response) => console.log(response),\n                  (error) => console.log(error));\n\n    this.lastSubmittedDisruption = departure;\n    this.getDeparturesData();\n  }\n\n  // Method used for styling the percentage\n  calculateWidth(run_id: any) {\n    // if user has already submit information\n    if (this.crowdedness[run_id]) {\n      var width = this.crowdedness[run_id].average / 3 * 100;\n      console.log(width + \"%\");\n      return (width + \"%\");\n    }\n    else {\n      console.log(\"20%\");\n      return \"0%\";\n    }\n  }\n\n  constructor(private departuresService: DeparturesService, private tramService: TramService, private http: Http) {}\n\n  ngOnInit(): void {\n    this.getDeparturesData();\n\n    /* poll our server every minute */\n    IntervalObservable.create(60 * 1000) // ms, 1 minute\n        .subscribe(x => this.getDeparturesData());\n  }\n\n  updateDeparturesData(departuresData: any): void {\n    console.log(departuresData);\n    this.departuresData = departuresData;\n\n    // Get crowdsourced data\n    this.crowdedness = departuresData.crowdSourcedDisruptions.crowdedness;\n    console.log(this.crowdedness);\n    this.crowdDisruptions = departuresData.crowdSourcedDisruptions.disruptions;\n    console.log(this.crowdDisruptions);\n\n    /* get stop name and no for jumbotron, load to attribs */\n    for (var key in departuresData.ptvData.stops) { // assume only 1 stop\n      this.stopData = departuresData.ptvData.stops[key];\n      var stopName = this.stopData.stop_name;\n      var re = '\\\\d+$';\n      var matches = stopName.match(re);\n      if (matches) {\n        var match = matches[0];\n        this.stopNo = match;\n        this.stopName = stopName.slice(0, stopName.length - match.length - 1);\n      }\n      else {\n        this.stopName = stopName;\n      }\n    }\n\n    /* check if last submitted entry has disappeared from a group, and put it back if it has */\n    if (this.lastSubmitted) {\n      var key = this.lastSubmitted.route_id + '-' + this.lastSubmitted.direction_id;\n      var group = departuresData.groupedDepts[key];\n      if (group) {  // if a group exists\n        // iterate over all entries in the group, find if we can find the same run_id there\n        var isNotFound = true;\n        for (let i=0; i<group.length; i++) {\n          if (group[i].run_id == this.lastSubmitted.run_id) {\n            isNotFound = false;\n          }\n        }\n\n        if (isNotFound) { // add to the group if it does not exist there\n          console.log(\"Added\", this.lastSubmitted);\n          group.unshift(this.lastSubmitted);  // add to beginning of array\n        }\n\n      }\n      else {\n        departuresData.groupedDepts[key] = this.lastSubmitted;  // add it back\n      }\n    }\n\n    /* sort groupedDepts */\n    // add actual route numbers\n    for (let key in departuresData.groupedDepts) {\n      for (let i=0; i<departuresData.groupedDepts[key].length; i++) {\n        departuresData.groupedDepts[key][i].route_no = departuresData.ptvData.routes[departuresData.groupedDepts[key][i].route_id].route_number;\n      }\n    }\n\n    console.log(departuresData.groupedDepts);\n\n    var ordered = {};\n    Object.keys(departuresData.groupedDepts).sort(function(a, b) {\n        return parseInt(departuresData.groupedDepts[a][0].route_no) - parseInt(departuresData.groupedDepts[b][0].route_no);\n      }).forEach((key) => ordered[key] = departuresData.groupedDepts[key]);\n\n    departuresData.groupedDepts = ordered;\n\n    /* processed data */\n    var processed = {};\n\n    for (var key in departuresData.groupedDepts) {  // key: route_id + '-' + direction_id\n      for (var i=0; i<departuresData.groupedDepts[key].length; i++) {\n        if (departuresData.groupedDepts[key][i].estimated_departure_utc) {  // if estimated_departure_utc is null, not upcoming tram\n          /* parse departure time */\n          var departure = departuresData.groupedDepts[key][i];\n          departure.parsedEstDeptTime = new Date(departuresData.groupedDepts[key][i].estimated_departure_utc);\n\n          /* add to new processed JSON */\n          if (key in processed) {\n            processed[key].push(departure);\n          }\n          else {\n            processed[key] = [departure];\n          }\n        }\n      }\n    }\n\n    var i = 0;\n    var tmp = [];\n    var groupedBy2Departures = [];\n    for (var key in processed) {\n      tmp.push(processed[key]);\n      if (tmp.length%2==0 || i==Object.keys(processed).length-1)  { // \"break\" if 2 entries filled up, or last entry\n        groupedBy2Departures.push(tmp);\n        tmp = [];\n      }\n      i++;\n    }\n\n    this.processedGroupedDepts = groupedBy2Departures;\n    // console.log(groupedBy2Departures);\n\n    this.routes = departuresData.ptvData.routes;\n\n    this.directions = departuresData.ptvData.directions;\n  }\n\n\n  getDeparturesData(): void { // TODO: change to Observables using RxJS\n    // http://stackoverflow.com/questions/5448545/how-to-retrieve-get-parameters-from-javascript\n    class Params {\n      stop_id: any;\n    }\n\n    var queryDict = new Params();\n    window.location.search.substr(1).split(\"&\").forEach(function(item) {queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1]});\n    // TODO: Angular2 routing, validation\n\n    this.departuresService.getDeparturesData(queryDict.stop_id)\n      .then(departuresData => this.updateDeparturesData(departuresData));  // when the Promise is resolved, add to local departuresData\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule }    from '@angular/http';\nimport { FormsModule }   from '@angular/forms';\n\nimport { AppComponent }  from './app.component';\nimport { DepartureComponent } from './departure.component';\nimport { SmallDepartureComponent } from './small-departure.component';\nimport { NavbarComponent } from './navbar.component';\n\nimport { KeysPipe } from './keys.pipe';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, FormsModule ],\n  declarations: [ AppComponent,\n                  DepartureComponent, SmallDepartureComponent,\n                  NavbarComponent, KeysPipe ],\n  bootstrap:    [ AppComponent ],\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { DeparturesData } from './departures';\nimport { DEPARTURESDATA } from './mock-departures';\n\n@Injectable()\nexport class DeparturesService {\n  // apiUrl = 'http://hookturns.info/departures';\n  apiUrl = 'http://104.199.124.40/departures'\n\n  constructor(private http: Http) {}\n\n  getDeparturesUrl(stopId: string): string {\n    console.log(this.apiUrl + '?stopid=' +  stopId);\n    return this.apiUrl + '?stopid=' +  stopId;\n  }\n\n  getDeparturesData(stopId: any): Promise<DeparturesData> {\n    // console.log(DEPARTURESDATA);\n    // return Promise.resolve(DEPARTURESDATA);\n    return this.http.get(this.getDeparturesUrl(stopId))\n      .toPromise()\n      .then(response => response.json() as DeparturesData)\n      .catch(this.handleError);\n  }\n\n  handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);  // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/departures.service.ts","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({name: 'keys'})\nexport class KeysPipe implements PipeTransform {\n  transform(value: any, args:string[]) : any {\n    let keys = [];\n    for (let key in value) {\n      keys.push(key);\n    }\n    return keys;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/keys.pipe.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './partials/navbar.html'\n})\nexport class NavbarComponent { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navbar.component.ts","import {Component, Input} from '@angular/core';\nimport {DepartureComponent} from './departure.component';\n\n@Component({\n  selector: 'smalldeparture',\n  template: `\n  <div class=\"upcoming-tram\">\n    <h3>{{ minsToNow(departure.estimated_departure_utc) }}</h3>\n  </div>\n\n  <div class=\"progress\">\n    <div aria-valuemax=\"60\" aria-valuemin=\"0\" aria-valuenow=\"40\" class=\"{{'progress-bar progress-bar-' + crowding[departure.run_id]?.class.toLowerCase()}}\"\n        role=\"progressbar\" [ngStyle]=\"{width: calculateWidth(departure.run_id)}\">\n      {{crowding[departure.run_id]?.class}}\n    </div>\n  </div>\n  `\n})\nexport class SmallDepartureComponent extends DepartureComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/small-departure.component.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Response } from \"@angular/http\";\nimport \"rxjs/Rx\";\n\n@Injectable()\nexport class TramService {\n\n\tconstructor(private http: Http) {}\n\n\t// Method that will be used to store tram data\n\tstoreTrams(data: any) {\n\t\treturn this.http.post(\"/nextramdb\", data);\n\t}\n\n\tstoreDisruption(data: any) {\n\t\treturn this.http.post('/reportdisruption', data);\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tram.service.ts","module.exports = \"<navbar></navbar>\\n<!-- Jumbotron for stopname -->\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\"></div>\\n      <div class=\\\"col-md-8\\\">\\n        <h3>NEXTRAM</h3>\\n        <h1>{{ stopName }}</h1>\\n        <h2 *ngIf=\\\"stopNo\\\">Stop {{ stopNo }}</h2>\\n        <p>Not here? <button class=\\\"btn\\\" onclick=\\\"location.href='../search'\\\">Change</button>\\n      </div>\\n      <div class=\\\"col-md-2\\\"></div>\\n    </div>\\n  </div>\\n</div><!-- /jumbotron -->\\n\\n<div class=\\\"container-fluid\\\">\\n  <!-- <div *ngFor=\\\"let key of processedGroupedDepts | keys;\\\"> -->\\n    <div *ngFor=\\\"let row of processedGroupedDepts\\\" class=\\\"row match-my-cols\\\">\\n      <div class=\\\"col-sm-6 nextram_box full text-center\\\"\\n          attr.class=\\\"{{'col-sm-6 nextram_box text-center ' + crowdSourcedDisruptions[column[0].run_id]?.class.toLowerCase()}}\\\"\\n          *ngFor=\\\"let column of row\\\"><div class=\\\"box padding-15px\\\">\\n        <span class=\\\"{{ 'route_number_table route_number_' + routes[column[0].route_id].route_number }}\\\">{{ routes[column[0].route_id].route_number }}</span>\\n        {{ 'to ' + directions[column[0].direction_id].direction_name }}\\n\\n        <h1></h1>\\n\\n        <div *ngFor=\\\"let departure of column; let i=index\\\">\\n          <div *ngIf=\\\"i==0\\\">\\n            <departure\\n                [crowdDisruptions]=\\\"crowdDisruptions\\\"\\n                [crowdedness]=\\\"crowdedness\\\"\\n                [departure]=\\\"column[0]\\\"\\n                [routes]=\\\"routes\\\"\\n                [directions]=\\\"directions\\\">\\n            </departure>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"panel-group\\\" id=\\\"{{ 'accordion' + column[0].route_id + '-' + column[0].direction_id }}\\\">\\n            <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-heading\\\">\\n                <h4 class=\\\"panel-title\\\"><a class=\\\"accordion-toggle collapsed\\\"\\n                    data-toggle=\\\"collapse\\\"\\n                    attr.data-parent=\\\"{{ '#accordion' + column[0].route_id + '-' + column[0].direction_id }}\\\"\\n                    href=\\\"{{ '#collapse' + column[0].route_id + '-' + column[0].direction_id }}\\\">\\n                  Next departures and reporting</a>\\n                </h4>\\n              </div>\\n\\n              <div id=\\\"{{ 'collapse' + column[0].route_id + '-' + column[0].direction_id }}\\\" class=\\\"panel-collapse collapse\\\">\\n                <ul class=\\\"nav nav-pills center-pills\\\">\\n                  <li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" class=\\\"pill-tabs\\\" href=\\\"{{ '#moreDetails' + column[0].route_id + '-' + column[0].direction_id }}\\\">Next departures</a></li>\\n                  <li><a data-toggle=\\\"tab\\\" class=\\\"pill-tabs\\\" href=\\\"{{ '#reportCrowd' + column[0].route_id + '-' + column[0].direction_id }}\\\">Report Crowd</a></li>\\n                  <li><a data-toggle=\\\"tab\\\" class=\\\"pill-tabs\\\" href=\\\"{{ '#reportDisruption' + column[0].route_id + '-' + column[0].direction_id }}\\\">Report Disruption</a></li>\\n                </ul>\\n\\n                <div class=\\\"tab-content\\\">\\n                  <div class=\\\"tab-pane fade in active\\\" id=\\\"{{'moreDetails' + column[0].route_id + '-' + column[0].direction_id }}\\\">\\n                      <div class=\\\"well\\\">\\n                        <div *ngFor=\\\"let departure of column; let i=index\\\">\\n\\n                          <div *ngIf=\\\"i>0\\\">\\n                            <smalldeparture\\n                                [crowdDisruptions]=\\\"crowdDisruptions\\\"\\n                                [crowdedness]=\\\"crowdedness\\\"\\n                                [departure]=\\\"departure\\\"\\n                                [routes]=\\\"routes\\\"\\n                                [directions]=\\\"directions\\\">\\n                            </smalldeparture>\\n                          </div>\\n\\n                        </div>\\n                      </div><!-- end bunch -->\\n                    </div>\\n\\n                  <div class=\\\"tab-pane fade in\\\" id=\\\"{{'reportCrowd' + column[0].route_id + '-' + column[0].direction_id }}\\\">\\n                    <div class=\\\"well\\\" *ngIf=\\\"column[0].run_id != lastSubmitted?.run_id || !lastSubmitted\\\"> <!-- if not last submitted -->\\n                      <div class=\\\"row\\\">\\n                        <h5>Rate the crowdedness level of the tram below:</h5>\\n                      </div>\\n\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-xs-10 col-xs-offset-1\\\">\\n                          <!-- Button crowdedness -->\\n                          <button (click)=\\\"onInputData(column[0], 0)\\\"\\n                                  (click)=\\\"onSubmitCrowdedness()\\\"\\n                                  class=\\\"btn btn-success btn-lg clear_5px_top\\\" type=\\\"submit\\\" name=\\\"crowdedness\\\" value=\\\"0\\\">Empty</button>\\n                          <button (click)=\\\"onInputData(column[0], 1)\\\"\\n                                  (click)=\\\"onSubmitCrowdedness()\\\"\\n                                  class=\\\"btn btn-success btn-lg clear_5px_top\\\" name=\\\"crowdedness\\\" value=\\\"1\\\" type=\\\"submit\\\">Decent</button>\\n                          <button (click)=\\\"onInputData(column[0], 2)\\\"\\n                                  (click)=\\\"onSubmitCrowdedness()\\\"\\n                                  name=\\\"crowdedness\\\" value=\\\"2\\\" class=\\\"btn btn-warning btn-lg clear_5px_top\\\" type=\\\"submit\\\">Full</button>\\n                          <button (click)=\\\"onInputData(column[0], 3)\\\"\\n                                  (click)=\\\"onSubmitCrowdedness()\\\"\\n                                  class=\\\"btn btn-danger btn-lg clear_5px_top\\\" type=\\\"submit\\\" name=\\\"crowdedness\\\" value=\\\"3\\\">Overcrowded</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"well\\\" *ngIf=\\\"column[0].run_id == lastSubmitted?.run_id\\\"> <!-- if not last submitted -->\\n                      <p>Thank you for submitting!</p>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"tab-pane fade in\\\" id=\\\"{{'reportDisruption' + column[0].route_id + '-' + column[0].direction_id }}\\\">\\n                    <div class=\\\"well\\\" *ngIf=\\\"column[0].run_id != lastSubmittedDisruption?.run_id || !lastSubmittedDisruption\\\">\\n                      <div class=\\\"row\\\">\\n                        <h5>Describe any disruptions or inconveniences below:</h5>\\n                      </div>\\n\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-xs-10 col-xs-offset-1\\\">\\n                          <div class=\\\"input-group\\\">\\n                            <textarea [(ngModel)]=\\\"disruptionData[column[0].run_id]\\\" class=\\\"form-control\\\" id=\\\"disruption\\\" placeholder=\\\"Enter here\\\" rows=\\\"2\\\"></textarea>\\n                            <!-- TODO: fix fixed string -->\\n                            <span (click)=\\\"onSubmitDisruption(column[0], disruptionData[column[0].run_id])\\\" class=\\\"input-group-addon btn btn-primary\\\">Submit</span>\\n                          </div>\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"well\\\" *ngIf=\\\"column[0].run_id == lastSubmittedDisruption?.run_id\\\"> <!-- if not last submitted -->\\n                      <p>Thank you for submitting!</p>\\n                    </div>\\n\\n\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n\\n\\n      </div></div><!-- End of col -->\\n\\n    </div>\\n  <!-- </div> -->\\n</div>\\n\\n\\n<footer>\\n  <p>COPYRIGHT HOOKTURNS 2017</p>\\n</footer>\\n\\n\\n<!-- {{ departuresData?.status }}  http://stackoverflow.com/a/34738113: wait for Promise -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/partials/app_component.html\n// module id = 353\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/partials/navbar.html\n// module id = 354\n// module chunks = 1"],"sourceRoot":""}